{"version":3,"sources":["components/PokemonCard.js","components/PokemonList.js","components/Pagination.js","components/loading.gif","components/Spinner.js","App.js","index.js"],"names":["useStyle","makeStyles","theme","card","margin","spacing","marginTop","border","display","justifyContent","backgroundColor","height","cardMedia","width","PokemonCard","pokemonName","classes","capitalize","name","lower","toLowerCase","charAt","toUpperCase","slice","className","root","Card","CardHeader","title","CardMedia","component","image","PokemonList","pokemon","Container","Grid","container","map","p","item","lg","md","sm","xs","Pagination","gotoPrevPage","gotoNextPage","Button","disabled","variant","color","onClick","spinner","textAlign","Spinner","src","alt","App","useState","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","progress","setProgress","fetchData","a","url","fetch","data","json","parsedData","results","next","previous","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff954620.chunk.js","sourcesContent":["import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(2),\r\n        marginTop: 20,\r\n        border: \"1px grey solid\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        backgroundColor: \"#f9f9f9\",\r\n        height: \"140px\"\r\n    },\r\n    cardMedia: {\r\n        width: \"160px\"\r\n    }\r\n}));\r\n\r\nconst PokemonCard = ({ pokemonName }) => {\r\n    const classes = useStyle();\r\n    const capitalize = (name) => {\r\n        const lower = name.toLowerCase();\r\n        const titleCase = lower.charAt(0).toUpperCase() + lower.slice(1);\r\n        return titleCase;\r\n    }\r\n    capitalize(pokemonName)\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card className={classes.card}>\r\n                <CardHeader\r\n                    title={capitalize(pokemonName)}\r\n                />\r\n                <CardMedia\r\n                    className={classes.cardMedia}\r\n                    component=\"img\"\r\n                    image={`https://img.pokemondb.net/artwork/large/${pokemonName}.jpg`}\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PokemonCard\r\n","import { Container, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport PokemonCard from './PokemonCard';\r\n\r\nconst PokemonList = ({ pokemon }) => {\r\n    return (\r\n        <Container>\r\n            <Grid container>\r\n                {pokemon && pokemon.map(p => (\r\n                    <Grid key={p} item lg={4} md={6} sm={6} xs={12}>\r\n                        <PokemonCard\r\n                            pokemonName={p}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PokemonList\r\n","import { Button, Container } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n})\r\n\r\nconst Pagination = ({ gotoPrevPage, gotoNextPage }) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <Container className={classes.root}>\r\n            <Button\r\n                disabled={!gotoPrevPage}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={gotoPrevPage}\r\n            >\r\n                Previous\r\n            </Button>\r\n            <Button\r\n                disabled={!gotoNextPage}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={gotoNextPage}\r\n            >\r\n                Next\r\n            </Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","export default __webpack_public_path__ + \"static/media/loading.ec9c053b.gif\";","import { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React from 'react';\r\nimport image from \"./loading.gif\"\r\n\r\nconst useStyle = makeStyles({\r\n    spinner: {\r\n        textAlign: \"center\",\r\n        marginTop: \"20px\"\r\n    }\r\n})\r\nconst Spinner = () => {\r\n    const classes = useStyle();\r\n    return (\r\n        <Container className={classes.spinner}>\r\n            <img className=\"my-3\" src={image} alt=\"loading\" />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PokemonList from \"./components/PokemonList\";\r\nimport Pagination from \"./components/Pagination\";\r\nimport Spinner from \"./components/Spinner\";\r\nimport LoadingBar from 'react-top-loading-bar';\r\n\r\n\r\nfunction App() {\r\n  const [pokemon, setPokemon] = useState([]);\r\n  const [currentPageUrl, setCurrentPageUrl] = useState(\"https://pokeapi.co/api/v2/pokemon?offset=0&limit=9\")\r\n  const [nextPageUrl, setNextPageUrl] = useState(\"\");\r\n  const [prevPageUrl, setPrevPageUrl] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [progress, setProgress] = useState(0)\r\n\r\n\r\n  const fetchData = async () => {\r\n    setProgress(0)\r\n    const url = currentPageUrl;\r\n    setProgress(30)\r\n    const data = await fetch(url);\r\n    setProgress(100)\r\n    const parsedData = await data.json();\r\n    setLoading(false)\r\n    setPokemon(parsedData.results.map(p => p.name));\r\n    setNextPageUrl(parsedData.next)\r\n    setPrevPageUrl(parsedData.previous)\r\n  }\r\n\r\n  const gotoPrevPage = () => {\r\n    setCurrentPageUrl(prevPageUrl);\r\n  }\r\n\r\n  const gotoNextPage = () => {\r\n    setCurrentPageUrl(nextPageUrl);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [currentPageUrl]);\r\n\r\n  if (loading === true) return <Spinner />;\r\n\r\n  return (\r\n    <div>\r\n      <LoadingBar\r\n        color='#0000FF'\r\n        progress={progress}\r\n        height={3}\r\n      />\r\n      <div className=\"text-center\">\r\n        {loading && <Spinner />}\r\n      </div>\r\n\r\n      <PokemonList pokemon={pokemon} />\r\n      <Pagination\r\n        gotoNextPage={nextPageUrl ? gotoNextPage : null}\r\n        gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}